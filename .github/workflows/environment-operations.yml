name: Environment Operations

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: [ '.github/workflows/environment-operations.yml' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  existing-environment-update:
    name: Update Existing Environment
    runs-on: windows-latest
    outputs:
      total-time: ${{ steps.update-results.outputs.total-time }}
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start Total Timing
        run: |
          echo "=== Starting timing for environment update approach ==="
          echo "TOTAL_START_TIME=$([System.DateTime]::Now.Ticks)" >> $env:GITHUB_ENV

      - name: Setup Miniconda (creates default test environment)
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          auto-activate-base: false

      - name: Update Environment with Dependencies
        run: |
          conda activate test
          conda env update --name test --file environment.yml

      - name: Calculate Total Time
        run: |
          $end_time = [System.DateTime]::Now.Ticks
          $duration = ($end_time - $env:TOTAL_START_TIME) / 10000000
          $formatted_duration = [math]::Round($duration, 1)
          echo "TOTAL_TIME=$formatted_duration" >> $env:GITHUB_ENV
          echo "Environment update approach total time: $formatted_duration seconds"

      - name: Set Update Results
        id: update-results
        run: |
          echo "total-time=$env:TOTAL_TIME" >> $env:GITHUB_OUTPUT

      - name: Report Results
        run: |
          echo "=== ENVIRONMENT UPDATE RESULTS ==="
          echo "Total Time (setup-miniconda + environment update): $env:TOTAL_TIME seconds"
          echo "This approach uses setup-miniconda then updates the default 'test' environment"

  integrated-environment-setup:
    name: Integrated Environment Setup
    runs-on: windows-latest
    outputs:
      total-time: ${{ steps.integrated-results.outputs.total-time }}
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start Total Timing
        run: |
          echo "=== Starting timing for integrated setup approach ==="
          echo "TOTAL_START_TIME=$([System.DateTime]::Now.Ticks)" >> $env:GITHUB_ENV

      - name: Setup Miniconda with Integrated Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          activate-environment: integrated-test-env
          environment-file: environment.yml
          auto-activate-base: false

      - name: Calculate Total Time
        run: |
          $end_time = [System.DateTime]::Now.Ticks
          $duration = ($end_time - $env:TOTAL_START_TIME) / 10000000
          $formatted_duration = [math]::Round($duration, 1)
          echo "TOTAL_TIME=$formatted_duration" >> $env:GITHUB_ENV
          echo "Integrated setup approach total time: $formatted_duration seconds"

      - name: Set Integrated Results
        id: integrated-results
        run: |
          echo "total-time=$env:TOTAL_TIME" >> $env:GITHUB_OUTPUT

      - name: Report Results
        run: |
          echo "=== INTEGRATED SETUP RESULTS ==="
          echo "Total Time (setup-miniconda + environment creation): $env:TOTAL_TIME seconds"
          echo "This approach combines miniconda setup and environment creation in one step"

  separate-environment-creation:
    name: Separate Environment Creation
    runs-on: windows-latest
    outputs:
      total-time: ${{ steps.separate-results.outputs.total-time }}
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start Total Timing
        run: |
          echo "=== Starting timing for separate environment creation approach ==="
          echo "TOTAL_START_TIME=$([System.DateTime]::Now.Ticks)" >> $env:GITHUB_ENV

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          auto-activate-base: false

      - name: Create Environment Separately
        run: |
          conda env create -f environment.yml -n separate-test-env

      - name: Calculate Total Time
        run: |
          $end_time = [System.DateTime]::Now.Ticks
          $duration = ($end_time - $env:TOTAL_START_TIME) / 10000000
          $formatted_duration = [math]::Round($duration, 1)
          echo "TOTAL_TIME=$formatted_duration" >> $env:GITHUB_ENV
          echo "Separate environment creation approach total time: $formatted_duration seconds"

      - name: Set Separate Results
        id: separate-results
        run: |
          echo "total-time=$env:TOTAL_TIME" >> $env:GITHUB_OUTPUT

      - name: Report Results
        run: |
          echo "=== SEPARATE ENVIRONMENT CREATION RESULTS ==="
          echo "Total Time (setup-miniconda + separate env create): $env:TOTAL_TIME seconds"
          echo "This approach does setup-miniconda first, then creates environment separately"

      - name: Cleanup
        run: |
          conda env remove -n separate-test-env -y 2>$null

  operations-summary:
    name: Environment Operations Summary
    runs-on: windows-latest
    needs: [existing-environment-update, integrated-environment-setup, separate-environment-creation]
    if: always()
    steps:
      - name: Generate Operations Summary Report
        shell: pwsh
        run: |
          echo "=== ENVIRONMENT OPERATIONS SUMMARY ==="
          echo ""
          echo "All timings measured from before setup-miniconda to after environment is ready"
          echo ""
          echo "| Approach | Total Time | Description |"
          echo "|----------|------------|-------------|"
          echo "| Environment Update | ${{ needs.existing-environment-update.outputs.total-time }}s | setup-miniconda + update existing 'test' environment |"
          echo "| Integrated Setup | ${{ needs.integrated-environment-setup.outputs.total-time }}s | setup-miniconda with environment-file parameter |"
          echo "| Separate Creation | ${{ needs.separate-environment-creation.outputs.total-time }}s | setup-miniconda + conda env create separately |"
          echo ""
          
          $update_time = if ('${{ needs.existing-environment-update.outputs.total-time }}' -ne '') { [double]'${{ needs.existing-environment-update.outputs.total-time }}' } else { 0 }
          $integrated_time = if ('${{ needs.integrated-environment-setup.outputs.total-time }}' -ne '') { [double]'${{ needs.integrated-environment-setup.outputs.total-time }}' } else { 0 }
          $separate_time = if ('${{ needs.separate-environment-creation.outputs.total-time }}' -ne '') { [double]'${{ needs.separate-environment-creation.outputs.total-time }}' } else { 0 }
          
          # Find fastest approach
          $fastest_approach = "Unknown"
          $fastest_time = 999
          
          if ($update_time -gt 0 -and $update_time -lt $fastest_time) {
            $fastest_approach = "Environment Update"
            $fastest_time = $update_time
          }
          if ($integrated_time -gt 0 -and $integrated_time -lt $fastest_time) {
            $fastest_approach = "Integrated Setup"
            $fastest_time = $integrated_time
          }
          if ($separate_time -gt 0 -and $separate_time -lt $fastest_time) {
            $fastest_approach = "Separate Creation"
            $fastest_time = $separate_time
          }
          
          echo "**Fastest Approach**: $fastest_approach (${fastest_time}s total)"
          echo ""
          
          # Performance comparisons
          if ($integrated_time -gt 0 -and $separate_time -gt 0) {
            if ($integrated_time -lt $separate_time) {
              $ratio = [math]::Round(($separate_time / $integrated_time), 1)
              echo "**Integrated vs Separate**: Integrated is ${ratio}x faster (saves $([math]::Round(($separate_time - $integrated_time), 1))s)"
            } else {
              $ratio = [math]::Round(($integrated_time / $separate_time), 1)
              echo "**Integrated vs Separate**: Separate is ${ratio}x faster (saves $([math]::Round(($integrated_time - $separate_time), 1))s)"
            }
          }
          
          if ($update_time -gt 0 -and $separate_time -gt 0) {
            if ($update_time -lt $separate_time) {
              $ratio = [math]::Round(($separate_time / $update_time), 1)
              echo "**Update vs Separate**: Update is ${ratio}x faster (saves $([math]::Round(($separate_time - $update_time), 1))s)"
            } else {
              $ratio = [math]::Round(($update_time / $separate_time), 1)
              echo "**Update vs Separate**: Separate is ${ratio}x faster (saves $([math]::Round(($update_time - $separate_time), 1))s)"
            }
          }
          
          if ($update_time -gt 0 -and $integrated_time -gt 0) {
            if ($update_time -lt $integrated_time) {
              $ratio = [math]::Round(($integrated_time / $update_time), 1)
              echo "**Update vs Integrated**: Update is ${ratio}x faster (saves $([math]::Round(($integrated_time - $update_time), 1))s)"
            } else {
              $ratio = [math]::Round(($update_time / $integrated_time), 1)
              echo "**Update vs Integrated**: Integrated is ${ratio}x faster (saves $([math]::Round(($update_time - $integrated_time), 1))s)"
            }
          }
          
          echo ""
          echo "**Key Insights**:"
          echo "- All approaches include complete setup-miniconda + environment creation timing"
          echo "- **Environment Update**: Leverages existing 'test' environment created by setup-miniconda"
          echo "- **Integrated Setup**: Uses environment-file parameter for one-step creation"
          echo "- **Separate Creation**: Traditional two-step approach (setup then create)"
          echo "- **Consistent Timing**: All measurements from start of setup-miniconda to final environment"
          echo ""
          echo "**Use Case Recommendations**:"
          echo "- **Fastest for CI/CD**: Use the approach with lowest total time"
          echo "- **Simplest Configuration**: Integrated setup (single action call)"
          echo "- **Most Flexible**: Separate creation (allows custom conda commands)"
          echo "- **Existing Workflows**: Environment update (if you already use default environment)"
