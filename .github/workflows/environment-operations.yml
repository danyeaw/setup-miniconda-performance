operations-summary:
  name: Environment Operations Summary
  runs-on: windows-latest
  needs: [existing-environment-update, integrated-environment-setup]
  if: always()
  steps:
    - name: Generate Operations Summary Report
      shell: pwsh
      run: |
        echo "=== ENVIRONMENT OPERATIONS SUMMARY ==="
        echo ""
        echo "| Operation | Time | Description |"
        echo "|-----------|------|-------------|"
        echo "| Environment Update | ${{ needs.existing-environment-update.outputs.update-time }}s | Update existing 'test' environment |"
        echo "| Integrated Setup | ${{ needs.integrated-environment-setup.outputs.integrated-setup-time }}s | Miniconda + Environment in one step |"
        echo ""
        
        $update_time = if ('${{ needs.existing-environment-update.outputs.update-time }}' -ne '') { [double]'${{ needs.existing-environment-update.outputs.update-time }}' } else { 0 }
        $integrated_time = if ('${{ needs.integrated-environment-setup.outputs.integrated-setup-time }}' -ne '') { [double]'${{ needs.integrated-environment-setup.outputs.integrated-setup-time }}' } else { 0 }
        
        if ($update_time -gt 0 -and $integrated_time -gt 0) {
          if ($update_time -lt $integrated_time) {
            $ratio = [math]::Round(($integrated_time / $update_time), 1)
            echo "**Fastest Approach**: Environment Update (${ratio}x faster than integrated setup)"
          } else {
            $ratio = [math]::Round(($update_time / $integrated_time), 1)
            echo "**Fastest Approach**: Integrated Setup (${ratio}x faster than update)"
          }
        }
        
        echo ""
        echo "**Key Insights**:"
        echo "- Environment updates modify existing environments incrementally"
        echo "- Integrated setup combines Miniconda installation and environment creation"
        echo "- Update approach is typically faster when environment already exists"
        echo "- Integrated setup is convenient for fresh installations"name: Environment Operations

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: [ '.github/workflows/environment-operations.yml' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  existing-environment-update:
    name: Update Existing Environment
    runs-on: windows-latest
    outputs:
      update-time: ${{ steps.update-results.outputs.update-time }}
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Miniconda (creates default test environment)
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          auto-activate-base: false

      - name: Time Environment Update
        run: |
          $start_time = [System.DateTime]::Now.Ticks
          conda activate test
          conda env update --name test --file environment.yml
          $end_time = [System.DateTime]::Now.Ticks
          $duration = ($end_time - $start_time) / 10000000
          $formatted_duration = [math]::Round($duration, 1)
          echo "UPDATE_TIME=$formatted_duration" >> $env:GITHUB_ENV

      - name: Set Update Results
        id: update-results
        shell: pwsh
        run: echo "update-time=$env:UPDATE_TIME" >> $env:GITHUB_OUTPUT

      - name: Report Environment Update Results
        shell: pwsh
        run: |
          echo "=== EXISTING ENVIRONMENT UPDATE RESULTS ==="
          echo "Update Time: $env:UPDATE_TIME seconds"
          echo "This tests updating the existing 'test' environment vs creating new environments"

  integrated-environment-setup:
    name: Integrated Environment Setup
    runs-on: windows-latest
    outputs:
      integrated-setup-time: ${{ steps.integrated-results.outputs.setup-time }}
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start Integrated Setup Timing
        shell: pwsh
        run: |
          echo "=== Starting integrated environment setup timing ==="
          echo "INTEGRATED_START_TIME=$([System.DateTime]::Now.Ticks)" >> $env:GITHUB_ENV

      - name: Setup Miniconda with Integrated Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          activate-environment: integrated-test-env
          environment-file: environment.yml
          auto-activate-base: false

      - name: Calculate Integrated Setup Time
        shell: pwsh
        run: |
          $end_time = [System.DateTime]::Now.Ticks
          $duration = ($end_time - $env:INTEGRATED_START_TIME) / 10000000
          $formatted_duration = [math]::Round($duration, 1)
          echo "Integrated setup took: $formatted_duration seconds"
          echo "INTEGRATED_SETUP_TIME=$formatted_duration" >> $env:GITHUB_ENV

      - name: Set Integrated Results
        id: integrated-results
        shell: pwsh
        run: |
          echo "setup-time=$env:INTEGRATED_SETUP_TIME" >> $env:GITHUB_OUTPUT

      - name: Report Integrated Setup Results
        shell: pwsh
        run: |
          echo "=== INTEGRATED ENVIRONMENT SETUP RESULTS ==="
          echo "Total Setup Time (Miniconda + Environment): $env:INTEGRATED_SETUP_TIME seconds"
          echo "This includes both Miniconda installation and environment creation in one step"
