name: Main Performance Test

on:
  workflow_dispatch:
    inputs:
      test-suite:
        description: 'Which test suite to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - core-setup-comparison
          - environment-operations
          - caching-performance
          - solver-optimization
          - lockfile-performance
          - shell-performance
          - channel-performance
      generate-summary:
        description: 'Generate summary report after tests'
        required: false
        default: true
        type: boolean
  push:
    branches: [ main ]
    paths: [ '.github/workflows/main-performance-test.yml' ]

permissions:
  actions: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  trigger-tests:
    name: Trigger Performance Tests
    runs-on: ubuntu-latest
    outputs:
      triggered-workflows: ${{ steps.trigger.outputs.workflows }}
      trigger-time: ${{ steps.trigger.outputs.trigger-time }}
    steps:
      - name: Trigger Selected Tests
        id: trigger
        uses: actions/github-script@v7
        with:
          script: |
            const testSuite = '${{ github.event.inputs.test-suite }}' || 'all';
            
            const workflows = {
              'core-setup-comparison': 'core-setup-comparison.yml',
              'environment-operations': 'environment-operations.yml', 
              'caching-performance': 'caching-performance.yml',
              'solver-optimization': 'solver-optimization.yml',
              'lockfile-performance': 'lockfile-performance.yml',
              'shell-performance': 'shell-performance.yml',
              'channel-performance': 'channel-performance.yml'
            };
            
            const triggeredWorkflows = [];
            const triggerTime = new Date().toISOString();
            
            if (testSuite === 'all') {
              // Trigger all workflows
              for (const [name, workflowFile] of Object.entries(workflows)) {
                try {
                  await github.rest.actions.createWorkflowDispatch({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    workflow_id: workflowFile,
                    ref: 'main'
                  });
                  triggeredWorkflows.push(name);
                  console.log(`✅ Triggered ${name}`);
                } catch (error) {
                  console.log(`❌ Failed to trigger ${name}: ${error.message}`);
                }
            
                // Add delay between triggers to avoid rate limiting
                await new Promise(resolve => setTimeout(resolve, 2000));
              }
            } else if (workflows[testSuite]) {
              // Trigger specific workflow
              try {
                await github.rest.actions.createWorkflowDispatch({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  workflow_id: workflows[testSuite],
                  ref: 'main'
                });
                triggeredWorkflows.push(testSuite);
                console.log(`✅ Triggered ${testSuite}`);
              } catch (error) {
                console.log(`❌ Failed to trigger ${testSuite}: ${error.message}`);
              }
            } else {
              console.log(`❌ Unknown test suite: ${testSuite}`);
            }
            
            core.setOutput('workflows', JSON.stringify(triggeredWorkflows));
            core.setOutput('trigger-time', triggerTime);
            return triggeredWorkflows;

      - name: Display Triggered Tests
        run: |
          echo "=== TRIGGERED PERFORMANCE TESTS ==="
          echo "Test Suite: ${{ github.event.inputs.test-suite || 'all' }}"
          echo "Triggered Workflows: ${{ steps.trigger.outputs.workflows }}"
          echo "Trigger Time: ${{ steps.trigger.outputs.trigger-time }}"
          echo ""
          echo "You can monitor the progress of these tests in the Actions tab:"
          echo "https://github.com/${{ github.repository }}/actions"
